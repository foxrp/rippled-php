{
  "methods": [
    {
      "name": "account_channels",
      "description": "The account_channels method returns information about an account's Payment Channels. This includes only channels where the specified account is the channel's source, not the destination. (A channel's \"source\" and \"owner\" are the same.) All information retrieved is relative to a particular version of the ledger.",
      "reference": "https://developers.ripple.com/account_channels.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "The unique identifier of an account, typically the account's Address. The request returns channels where this account is the channel's owner/source."
        },
        {
          "name": "destination_account",
          "json_type": "String",
          "required": false,
          "description": "The unique identifier of an account, typically the account's Address. If provided, filter results to payment channels whose destination is this account."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": true,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String",
          "required": true,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "limit",
          "json_type": "String",
          "required": true,
          "description": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400. Defaults to 200."
        },
        {
          "name": "marker",
          "json_type": "String",
          "required": true,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "account_currencies",
      "description": "The account_currencies command retrieves a list of currencies that an account can send or receive, based on its trust lines. (This is not a thoroughly confirmed list, but it can be used to populate user interfaces.)",
      "reference": "https://developers.ripple.com/account_currencies.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's Address."
        },
        {
          "name": "strict",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, only accept an address or public key for the account parameter. Defaults to false."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "account_info",
      "description": "The account_info command retrieves information about an account, its activity, and its XRP balance. All information retrieved is relative to a particular version of the ledger.",
      "reference": "https://developers.ripple.com/account_info.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's Address."
        },
        {
          "name": "strict",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, only accept an address or public key for the account parameter. Defaults to false."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "queue",
          "json_type": "Boolean",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "signer_lists",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account."
        }
      ]
    },
    {
      "name": "account_lines",
      "description": "The account_lines method returns information about an account's trust lines, including balances in all non-XRP currencies and assets. All information retrieved is relative to a particular version of the ledger.",
      "reference": "https://developers.ripple.com/account_lines.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's Address."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "peer",
          "json_type": "String",
          "required": false,
          "description": "The Address of a second account. If provided, show only lines of trust connecting the two accounts."
        },
        {
          "name": "limit",
          "json_type": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400.",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account.",
          "validation": {
            "min": 10,
            "max": 400
          }
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "account_objects",
      "description": "The account_objects command returns the raw ledger format for all objects owned by an account. For a higher-level view of an account's trust lines and balances, see the account_lines method instead.",
      "reference": "https://developers.ripple.com/account_objects.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's address."
        },
        {
          "name": "type",
          "json_type": "String",
          "required": false,
          "description": "If included, filter results to include only this type of ledger object. The valid types are: check, escrow, offer, payment_channel, signer_list, and state (trust line)."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "limit",
          "json_type": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400.",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account.",
          "validation": {
            "min": 10,
            "max": 400
          }
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "account_offers",
      "description": "The account_offers method retrieves a list of offers made by a given account that are outstanding as of a particular ledger version.",
      "reference": "https://developers.ripple.com/account_offers.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's address."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "limit",
          "json_type": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400.",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account.",
          "validation": {
            "min": 10,
            "max": 400
          }
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "account_tx",
      "description": "The account_tx method retrieves a list of transactions that involved the specified account.",
      "reference": "https://developers.ripple.com/account_offers.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's address."
        },
        {
          "name": "ledger_index_min",
          "json_type": "Integer",
          "required": false,
          "description": "Use to specify the earliest ledger to include transactions from. A value of -1 instructs the server to use the earliest validated ledger version available."
        },
        {
          "name": "ledger_index_max",
          "json_type": "Integer",
          "required": false,
          "description": "Use to specify the most recent ledger to include transactions from. A value of -1 instructs the server to use the most recent validated ledger version available."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "binary",
          "json_type": "Boolean",
          "required": false,
          "description": "Defaults to false. If set to true, returns transactions as hex strings instead of JSON."
        },
        {
          "name": "forward",
          "json_type": "Boolean",
          "required": false,
          "description": "Defaults to false. If set to true, returns values indexed with the oldest ledger first. Otherwise, the results are indexed with the newest ledger first. (Each page of results may not be internally ordered, but the pages are overall ordered.)"
        },
        {
          "name": "limit",
          "json_type": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400.",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account.",
          "validation": {
            "min": 10,
            "max": 400
          }
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "gateway_balances",
      "description": "The gateway_balances command calculates the total balances issued by a given account, optionally excluding amounts held by operational addresses.",
      "reference": "https://developers.ripple.com/gateway_balances.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's address."
        },
        {
          "name": "strict",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, only accept an address or public key for the account parameter. Defaults to false."
        },
        {
          "name": "hotwallet",
          "json_type": "String or Array",
          "required": false,
          "description": "An operational address to exclude from the balances issued, or an array of such addresses."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "noripple_check",
      "description": "The noripple_check command provides a quick way to check the status of the DefaultRipple field for an account and the NoRipple flag of its trust lines, compared with the recommended settings.",
      "reference": "https://developers.ripple.com/noripple_check.html",
      "group": "Account",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "A unique identifier for the account, most commonly the account's address."
        },
        {
          "name": "role",
          "json_type": "String",
          "required": true,
          "description": "Whether the address refers to a gateway or user. Recommendations depend on the role of the account. Issuers must have DefaultRipple enabled and must disable NoRipple on all trust lines. Users should have DefaultRipple disabled, and should enable NoRipple on all trust lines.",
          "validations": {
            "options": [
              "gateway",
              "user"
            ]
          }
        },
        {
          "name": "transactions",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, include an array of suggested transactions, as JSON objects, that you can sign and submit to fix the problems. Defaults to false."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "ledger",
      "description": "Retrieve information about the public ledger.",
      "reference": "https://developers.ripple.com/ledger.html",
      "group": "Ledger",
      "public": true,
      "fields": [
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "full",
          "json_type": "Boolean",
          "required": false,
          "description": "Admin required If true, return full information on the entire ledger. Ignored if you did not specify a ledger version. Defaults to false. (Equivalent to enabling transactions, accounts, and expand.) Caution: This is a very large amount of data -- on the order of several hundred megabytes!"
        },
        {
          "name": "accounts",
          "json_type": "Boolean",
          "required": false,
          "description": "Admin required. If true, return information on accounts in the ledger. Ignored if you did not specify a ledger version. Defaults to false. Caution: This returns a very large amount of data!"
        },
        {
          "name": "transactions",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, return information on transactions in the specified ledger version. Defaults to false. Ignored if you did not specify a ledger version."
        },
        {
          "name": "expand",
          "json_type": "Boolean",
          "required": false,
          "description": "Provide full JSON-formatted information for transaction/account information instead of only hashes. Defaults to false. Ignored unless you request transactions, accounts, or both."
        },
        {
          "name": "owner_funds",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, include owner_funds field in the metadata of OfferCreate transactions in the response. Defaults to false. Ignored unless transactions are included and expand is true."
        },
        {
          "name": "binary",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, and transactions and expand are both also true, return transaction information in binary format (hexadecimal string) instead of JSON format."
        },
        {
          "name": "queue",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, and the command is requesting the current ledger, includes an array of queued transactions in the results."
        }
      ]
    },
    {
      "name": "ledger_closed",
      "description": "The ledger_closed method returns the unique identifiers of the most recently closed ledger. (This ledger is not necessarily validated and immutable yet.)",
      "reference": "https://developers.ripple.com/ledger_closed.html",
      "group": "Ledger",
      "public": true,
      "fields": [
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "ledger_current",
      "description": "The ledger_current method returns the unique identifiers of the current in-progress ledger. This command is mostly useful for testing, because the ledger returned is still in flux.",
      "reference": "https://developers.ripple.com/ledger_current.html",
      "group": "Ledger",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "ledger_data",
      "description": "The ledger_data method retrieves contents of the specified ledger. You can iterate through several calls to retrieve the entire contents of a single ledger version.",
      "reference": "https://developers.ripple.com/ledger_data.html",
      "group": "Ledger",
      "public": true,
      "fields": [
        {
          "name": "id",
          "json_type": "Arbitrary",
          "required": false,
          "description": "(WebSocket only) Any identifier to separate this request from others in case the responses are delayed or out of order."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "binary",
          "json_type": "Boolean",
          "required": false,
          "description": "If set to true, return ledger objects as hashed hex strings instead of JSON. Defaults to False."
        },
        {
          "name": "limit",
          "json_type": "Limit the number of transactions to retrieve. The server is not required to honor this value. Must be within the inclusive range 10 to 400.",
          "required": false,
          "description": "If true, and the MultiSign amendment is enabled, also returns any SignerList objects associated with this account.",
          "validation": {
            "min": 10,
            "max": 400
          }
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "ledger_entry",
      "description": "The ledger_entry method returns a single ledger object from the XRP Ledger in its raw format. See ledger format for information on the different types of objects you can retrieve.",
      "reference": "https://developers.ripple.com/ledger_entry.html",
      "group": "Ledger",
      "public": true,
      "fields": [
        {
          "name": "index",
          "json_type": "String",
          "required": false,
          "description": "Specify the object ID of a single object to retrieve from the ledger."
        },
        {
          "name": "account_root",
          "json_type": "String - Address",
          "required": false,
          "description": "Specify an AccountRoot object to retrieve."
        },
        {
          "name": "check",
          "json_type": "String",
          "required": false,
          "description": "Specify the object ID of a Check object to retrieve."
        },
        {
          "name": "directory",
          "json_type": "Object or String",
          "required": false,
          "description": "Specify a DirectoryNode to retrieve. If a string, must be the object ID of the directory, as hexadecimal. If an object, requires either dir_root or owner as a sub-field, plus optionally a sub_index sub-field."
        },
        {
          "name": "directory.sub_index",
          "json_type": "Unsigned Integer",
          "required": false,
          "description": "If provided, jumps to a later \"page\" of the DirectoryNode."
        },
        {
          "name": "directory.dir_root",
          "json_type": "String",
          "required": false,
          "description": "(Required if directory is specified as an object and directory.owner is not provided) Unique index identifying the directory to retrieve, as a hex string."
        },
        {
          "name": "directory.owner",
          "json_type": "String",
          "required": false,
          "description": "(Required if directory is specified as an object and directory.dir_root is not provided) Unique address of the account associated with this directory."
        },
        {
          "name": "escrow",
          "json_type": "Object or String",
          "required": false,
          "description": "(Optional) Specify an Escrow object to retrieve. If a string, must be the object ID of the Escrow, as hexadecimal. If an object, requires owner and seq sub-fields."
        },
        {
          "name": "escrow.owner",
          "json_type": "String - Address",
          "required": false,
          "description": "(Required if escrow is specified as an object) The owner (sender) of the Escrow object."
        },
        {
          "name": "escrow.seq",
          "json_type": "Unsigned Integer",
          "required": false,
          "description": "(Required if escrow is specified as an object) The sequence number of the transaction that created the Escrow object."
        },
        {
          "name": "offer",
          "json_type": "Object or String",
          "required": false,
          "description": "Specify an Offer object to retrieve. If a string, interpret as the unique index to the Offer. If an object, requires the sub-fields account and seq to uniquely identify the offer."
        },
        {
          "name": "offer.account",
          "json_type": "String - Address",
          "required": false,
          "description": "(Required if offer specified) The account that placed the offer."
        },
        {
          "name": "offer.seq",
          "json_type": "Unsigned Integer",
          "required": false,
          "description": "(Required if offer specified) The sequence number of the transaction that created the Offer object."
        },
        {
          "name": "payment_channel",
          "json_type": "String",
          "required": false,
          "description": "Specify the object ID of a PayChannel object to retrieve."
        },
        {
          "name": "ripple_state",
          "json_type": "Object",
          "required": false,
          "description": "Object specifying the RippleState (trust line) object to retrieve. The accounts and currency sub-fields are required to uniquely specify the RippleState entry to retrieve."
        },
        {
          "name": "ripple_state.accounts",
          "json_type": "Array",
          "required": false,
          "description": "(Required if ripple_state specified) 2-length array of account Addresses, defining the two accounts linked by this RippleState object."
        },
        {
          "name": "ripple_state.currency",
          "json_type": "String",
          "required": false,
          "description": "(Required if ripple_state specified) Currency Code of the RippleState object to retrieve."
        },
        {
          "name": "binary",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, return the requested ledger object's contents as a hex string. Otherwise, return data in JSON format. The default is true if searching by index and false otherwise."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String or Unsigned Integer",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "sign",
      "description": "The sign method takes a transaction in JSON format and a secret key, and returns a signed binary representation of the transaction. The result is always different, even when you provide the same transaction JSON and secret key. To contribute one signature to a multi-signed transaction, use the sign_for method instead.",
      "reference": "https://developers.ripple.com/sign.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "tx_json",
          "json_type": "Object",
          "required": true,
          "description": "Transaction definition in JSON format."
        },
        {
          "name": "secret",
          "json_type": "String",
          "required": false,
          "description": "Secret key of the account supplying the transaction, used to sign it. Do not send your secret to untrusted servers or through unsecured network connections. Cannot be used with key_type, seed, seed_hex, or passphrase."
        },
        {
          "name": "seed",
          "json_type": "String",
          "required": false,
          "description": "Secret key of the account supplying the transaction, used to sign it. Must be in base58 format. If provided, you must also specify the key_type. Cannot be used with secret, seed_hex, or passphrase."
        },
        {
          "name": "seed_hex",
          "json_type": "String",
          "required": false,
          "description": "Secret key of the account supplying the transaction, used to sign it. Must be in hexadecimal format. If provided, you must also specify the key_type. Cannot be used with secret, seed, or passphrase."
        },
        {
          "name": "passphrase",
          "json_type": "String",
          "required": false,
          "description": "Secret key of the account supplying the transaction, used to sign it, as a string passphrase. If provided, you must also specify the key_type. Cannot be used with secret, seed, or seed_hex."
        },
        {
          "name": "key_type",
          "json_type": "String",
          "required": false,
          "description": "Type of cryptographic key provided in this request. Valid types are secp256k1 or ed25519. Defaults to secp256k1. Cannot be used with secret. Caution: Ed25519 support is experimental."
        },
        {
          "name": "offline",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, when constructing the transaction, do not try to automatically fill in or validate values. Defaults to false."
        },
        {
          "name": "build_path",
          "json_type": "Boolean",
          "required": false,
          "description": "If provided for a Payment-type transaction, automatically fill in the Paths field before signing. Caution: The server looks for the presence or absence of this field, not its value. This behavior may change."
        },
        {
          "name": "fee_mult_max",
          "json_type": "Integer",
          "required": false,
          "description": "Limits how high the automatically-provided Fee field can be. Signing fails with the error rpcHIGH_FEE if the current load multiplier on the transaction cost is greater than (fee_mult_max ÷ fee_div_max). Ignored if you specify the Fee field of the transaction (transaction cost). Defaults to 10; Recommended value 1000."
        },
        {
          "name": "fee_div_max",
          "json_type": "Integer",
          "required": false,
          "description": "Signing fails with the error rpcHIGH_FEE if the current load multiplier on the transaction cost is greater than (fee_mult_max ÷ fee_div_max). Ignored if you specify the Fee field of the transaction (transaction cost). Defaults to 1."
        }
      ]
    },
    {
      "name": "sign_for",
      "description": "The address which is providing the signature.",
      "reference": "https://developers.ripple.com/sign_for.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "account",
          "json_type": "String",
          "required": true,
          "description": "The address which is providing the signature."
        },
        {
          "name": "tx_json",
          "json_type": "Object",
          "required": true,
          "description": "The Transaction to sign. Unlike using the sign method, all fields of the transaction must be provided, including Fee and Sequence. The transaction must include the field SigningPubKey with an empty string as the value. The object may optionally contain a Signers array with previously-collected signatures."
        },
        {
          "name": "secret",
          "json_type": "String",
          "required": false,
          "description": "The secret key to sign with. (Cannot be used with key_type.)"
        },
        {
          "name": "passphrase",
          "json_type": "String",
          "required": false,
          "description": "A passphrase to use as the secret key to sign with."
        },
        {
          "name": "seed",
          "json_type": "String",
          "required": false,
          "description": " base58-encoded secret key to sign with."
        },
        {
          "name": "seed_hex",
          "json_type": "String",
          "required": false,
          "description": "A hexadecimal secret key to sign with."
        },
        {
          "name": "key_type",
          "json_type": "String",
          "required": false,
          "description": "The type of key to use for signing. This can be secp256k1 or ed25519. (Ed25519 support is experimental.)"
        }
      ]
    },
    {
      "name": "submit",
      "description": "The submit method applies a transaction and sends it to the network to be confirmed and included in future ledgers.",
      "reference": "https://developers.ripple.com/submit.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "tx_blob",
          "json_type": "String",
          "required": false,
          "description": "Hex representation of the signed transaction to submit. This can be a multi-signed transaction."
        },
        {
          "name": "tx_json",
          "json_type": "Object",
          "required": false,
          "description": "Transaction definition in JSON format, optionally omitting any auto-fillable fields."
        },
        {
          "name": "secret",
          "json_type": "String",
          "required": false,
          "description": "The secret key to sign with. (Cannot be used with key_type.)"
        },
        {
          "name": "passphrase",
          "json_type": "String",
          "required": false,
          "description": "A passphrase to use as the secret key to sign with."
        },
        {
          "name": "seed",
          "json_type": "String",
          "required": false,
          "description": " base58-encoded secret key to sign with."
        },
        {
          "name": "seed_hex",
          "json_type": "String",
          "required": false,
          "description": "A hexadecimal secret key to sign with."
        },
        {
          "name": "key_type",
          "json_type": "String",
          "required": false,
          "description": "The type of key to use for signing. This can be secp256k1 or ed25519. (Ed25519 support is experimental.)"
        },
        {
          "name": "fail_hard",
          "json_type": "Boolean",
          "required": false,
          "description": " If true, and the transaction fails locally, do not retry or relay the transaction to other servers. Defaults to false."
        },
        {
          "name": "offline",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, when constructing the transaction, do not try to automatically fill in or validate values. Defaults to false."
        },
        {
          "name": "build_path",
          "json_type": "Boolean",
          "required": false,
          "description": "If provided for a Payment-type transaction, automatically fill in the Paths field before signing. Caution: The server looks for the presence or absence of this field, not its value. This behavior may change."
        },
        {
          "name": "fee_mult_max",
          "json_type": "Integer",
          "required": false,
          "description": "Limits how high the automatically-provided Fee field can be. Signing fails with the error rpcHIGH_FEE if the current load multiplier on the transaction cost is greater than (fee_mult_max ÷ fee_div_max). Ignored if you specify the Fee field of the transaction (transaction cost). Defaults to 10; Recommended value 1000."
        },
        {
          "name": "fee_div_max",
          "json_type": "Integer",
          "required": false,
          "description": "Signing fails with the error rpcHIGH_FEE if the current load multiplier on the transaction cost is greater than (fee_mult_max ÷ fee_div_max). Ignored if you specify the Fee field of the transaction (transaction cost). Defaults to 1."
        }
      ]
    },
    {
      "name": "submit_multisigned",
      "description": "The submit_multisigned command applies a multi-signed transaction and sends it to the network to be included in future ledgers. (You can also submit multi-signed transactions in binary form using the submit command in submit-only mode.)",
      "reference": "https://developers.ripple.com/submit_multisigned.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "tx_json",
          "json_type": "String",
          "required": true,
          "description": "Transaction in JSON format with an array of Signers. To be successful, the weights of the signatures must be equal or higher than the quorum of the SignerList."
        },
        {
          "name": "fail_hard",
          "json_type": "String",
          "required": false,
          "description": "If true, and the transaction fails locally, do not retry or relay the transaction to other servers. Defaults to false."
        }
      ]
    },
    {
      "name": "transaction_entry",
      "description": "The transaction_entry method retrieves information on a single transaction from a specific ledger version. (The tx method, by contrast, searches all ledgers for the specified transaction. We recommend using that method instead.)",
      "reference": "https://developers.ripple.com/transaction_entry.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "tx_hash",
          "json_type": "String",
          "required": false,
          "description": "Unique hash of the transaction you are looking up."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "tx",
      "description": "The tx method retrieves information on a single transaction.",
      "reference": "https://developers.ripple.com/tx.html",
      "group": "Transaction",
      "public": true,
      "fields": [
        {
          "name": "transaction",
          "json_type": "String",
          "required": true,
          "description": "The 256-bit hash of the transaction, as hex."
        },
        {
          "name": "binary",
          "json_type": "Boolean",
          "required": false,
          "description": "If true, return transaction data and metadata as hex strings instead of JSON."
        }
      ]
    },
    {
      "name": "book_offers",
      "description": "The book_offers method retrieves a list of offers, also known as the order book, between two currencies. If the results are very large, a partial result is returned with a marker so that later requests can resume from where the previous one left off.",
      "reference": "https://developers.ripple.com/book_offers.html",
      "group": "Book",
      "public": true,
      "fields": [
        {
          "name": "taker_gets",
          "json_type": "Object",
          "required": true,
          "description": "Specification of which currency the account taking the offer would receive, as an object with currency and issuer fields (omit issuer for XRP), like currency amounts."
        },
        {
          "name": "taker_pays",
          "json_type": "Object",
          "required": true,
          "description": "Specification of which currency the account taking the offer would pay, as an object with currency and issuer fields (omit issuer for XRP), like currency amounts."
        },
        {
          "name": "taker",
          "json_type": "String",
          "required": false,
          "description": "The Address of an account to use as a perspective. Unfunded offers placed by this account are always included in the response. (You can use this to look up your own orders to cancel them.)"
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        },
        {
          "name": "marker",
          "json_type": "Marker",
          "required": false,
          "description": "Value from a previous paginated response. Resume retrieving data where that response left off."
        }
      ]
    },
    {
      "name": "ripple_path_find",
      "description": "The ripple_path_find method is a simplified version of the path_find method that provides a single response with a payment path you can use right away. It is available in both the WebSocket and JSON-RPC APIs. However, the results tend to become outdated as time passes. Instead of making multiple calls to stay updated, you should instead use the path_find method to subscribe to continued updates where possible.",
      "reference": "https://developers.ripple.com/ripple_path_find.html",
      "group": "Book",
      "public": true,
      "fields": [
        {
          "name": "source_account",
          "json_type": "String",
          "required": true,
          "description": "Unique address of the account that would send funds in a transaction."
        },
        {
          "name": "destination_account",
          "json_type": "String",
          "required": true,
          "description": "Unique address of the account that would receive funds in a transaction."
        },
        {
          "name": "destination_amount",
          "json_type": "String or Object",
          "required": true,
          "description": "Currency Amount that the destination account would receive in a transaction. Special case: New in: rippled 0.30.0 You can specify \"-1\" (for XRP) or provide -1 as the contents of the value field (for non-XRP currencies). This requests a path to deliver as much as possible, while spending no more than the amount specified in send_max (if provided)."
        },
        {
          "name": "send_max",
          "json_type": "String or Object",
          "required": false,
          "description": "Currency Amount that would be spent in the transaction. Cannot be used with source_currencies."
        },
        {
          "name": "source_currencies",
          "json_type": "Array",
          "required": false,
          "description": "Array of currencies that the source account might want to spend. Each entry in the array should be a JSON object with a mandatory currency field and optional issuer field, like how currency amounts are specified. Cannot contain more than 18 source currencies. By default, uses all source currencies available up to a maximum of 88 different currency/issuer pairs."
        },
        {
          "name": "ledger_hash",
          "json_type": "String",
          "required": false,
          "description": "A 20-byte hex string for the ledger version to use."
        },
        {
          "name": "ledger_index",
          "json_type": "String",
          "required": false,
          "description": "The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically."
        }
      ]
    },
    {
      "name": "channel_authorize",
      "description": "The channel_authorize method creates a signature that can be used to redeem a specific amount of XRP from a payment channel.",
      "reference": "https://developers.ripple.com/channel_authorize.html",
      "group": "Channels",
      "public": true,
      "fields": [
        {
          "name": "channel_id",
          "json_type": "String",
          "required": true,
          "description": "The unique ID of the payment channel to use."
        },
        {
          "name": "secret",
          "json_type": "String",
          "required": true,
          "description": "The secret key to use to sign the claim. This must be the same key pair as the public key specified in the channel."
        },
        {
          "name": "amount",
          "json_type": "String",
          "required": true,
          "description": "Cumulative amount of XRP, in drops, to authorize. If the destination has already received a lesser amount of XRP from this channel, the signature created by this method can be redeemed for the difference."
        }
      ]
    },
    {
      "name": "channel_verify",
      "description": "The channel_verify method checks the validity of a signature that can be used to redeem a specific amount of XRP from a payment channel.",
      "reference": "https://developers.ripple.com/channel_verify.html",
      "group": "Channels",
      "public": true,
      "fields": [
        {
          "name": "amount",
          "json_type": "String",
          "required": true,
          "description": "The amount of XRP, in drops, the provided signature authorizes."
        },
        {
          "name": "channel_id",
          "json_type": "String",
          "required": true,
          "description": "The Channel ID of the channel that provides the XRP. This is a 64-character hexadecimal string."
        },
        {
          "name": "public_key",
          "json_type": "String",
          "required": true,
          "description": "The public key of the channel and the key pair that was used to create the signature, in hexadecimal or base58 format."
        },
        {
          "name": "signature",
          "json_type": "String",
          "required": true,
          "description": "The signature to verify, in hexadecimal."
        }
      ]
    },
    {
      "name": "fee",
      "description": "The fee command reports the current state of the open-ledger requirements for the transaction cost. This requires the FeeEscalation amendment to be enabled.",
      "reference": "https://developers.ripple.com/fee.html",
      "group": "Server",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "server_info",
      "description": "The server_info command asks the server for a human-readable version of various information about the rippled server being queried.",
      "reference": "https://developers.ripple.com/server_info.html",
      "group": "Server",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "server_state",
      "description": "The server_state command asks the server for various machine-readable information about the rippled server's current state. The response is almost the same as the server_info method, but uses units that are easier to process instead of easier to read. (For example, XRP values are given in integer drops instead of scientific notation or decimal values, and time is given in milliseconds instead of seconds.)",
      "reference": "https://developers.ripple.com/server_state.html",
      "group": "Server",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "ping",
      "description": "The ping command returns an acknowledgement, so that clients can test the connection status and latency.",
      "reference": "https://developers.ripple.com/ping.html",
      "group": "Utility",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "random",
      "description": "The random command provides a random number to be used as a source of entropy for random number generation by clients.",
      "reference": "https://developers.ripple.com/random.html",
      "group": "Utility",
      "public": true,
      "fields": [
      ]
    },
    {
      "name": "wallet_propose",
      "description": "Use the wallet_propose method to generate a key pair and XRP Ledger address.",
      "reference": "https://xrpl.org/wallet_propose.html",
      "group": "Admin",
      "public": false,
      "fields": [
        {
          "name": "key_type",
          "json_type": "String",
          "required": true,
          "description": "Which signing algorithm to use to derive this key pair. Valid values are ed25519 and secp256k1 (all lower case). The default is secp256k1."
        },
        {
          "name": "passphrase",
          "json_type": "String",
          "required": false,
          "description": "Generate a key pair and address from this seed value. This value can be formatted in hexadecimal , the XRP Ledger's base58 format, RFC-1751 , or as an arbitrary string. Cannot be used with seed or seed_hex."
        },
        {
          "name": "seed",
          "json_type": "String",
          "required": false,
          "description": "Generate the key pair and address from this seed value in the XRP Ledger's base58-encoded format. Cannot be used with passphrase or seed_hex."
        },
        {
          "name": "seed_hex",
          "json_type": "String",
          "required": false,
          "description": "Generate the key pair and address from this seed value in hexadecimal format. Cannot be used with passphrase or seed."
        }
      ]
    }
  ]
}
